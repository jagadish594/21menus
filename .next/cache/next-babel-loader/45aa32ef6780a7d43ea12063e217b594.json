{"ast":null,"code":"var _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react'; //import Axios from 'axios';\n\nconst Index = props => {\n  let [totalHits, currentPage, totalPages, foods] = \"\"; //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\n\n  const {\n    0: inputQuery,\n    1: setInputQuery\n  } = useState(\"cheddar cheese\");\n  console.log(\"input Query: \", inputQuery);\n  const {\n    0: isSearch,\n    1: setSearch\n  } = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(\"I am in fetchData\");\n      const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\n      const resp = await fetch(URL);\n      const data = await resp.json();\n      setSearch(false); //({totalHits, currentPage, totalPages, foods} = await data);\n\n      return await data; //console.log(\"data from useEffect: \", data);\n      // const [totalHits, setTotalHits] = useState({totalHits});\n      // const [currentPage, setCurrentPage] = useState({currentPage});\n      // const [totalPages, setTotalPages] = useState({totalPages});\n      // const [foods, setFoods] = useState({foods});\n    };\n\n    ({\n      totalHits,\n      currentPage,\n      totalPages,\n      foods\n    } = fetchData());\n    console.log(total);\n  }, [isSearch]); // useEffect(() =>{\n  //     setSearch(true);\n  // }, [setInputQuery]);\n  // useEffect(() => {\n  //     setSearch(false);\n  // }, []);\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Hello 21Menus\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Total Hits: \", totalHits), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"currentPage: \", currentPage), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"totalPages: \", totalPages), __jsx(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: () => setSearch(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Search\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, foods && foods.map(food => __jsx(\"li\", {\n    key: food.fdcId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 39\n    }\n  }, food.fdcId, \" - \", food.brandOwner))));\n}; // Index.getInitialProps = async () => {\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\n//     const response = await fetch(URL);\n//     const data = await response.json();\n//     return {\n//         data: data\n//     }\n// }\n\n\nexport default Index;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/index.js"],"names":["Layout","fetch","useState","useEffect","Index","props","totalHits","currentPage","totalPages","foods","inputQuery","setInputQuery","console","log","isSearch","setSearch","fetchData","URL","resp","data","json","total","map","food","fdcId","brandOwner"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAI,CAACC,SAAD,EAAYC,WAAZ,EAAyBC,UAAzB,EAAqCC,KAArC,IAA8C,EAAlD,CADqB,CAErB;;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,gBAAD,CAA5C;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,UAA7B;AACA,QAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMa,SAAS,GAAG,YAAW;AACzBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,YAAMI,GAAG,GAAI,uGAAsGP,UAAW,EAA9H;AACA,YAAMQ,IAAI,GAAG,MAAMjB,KAAK,CAACgB,GAAD,CAAxB;AACA,YAAME,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AACAL,MAAAA,SAAS,CAAC,KAAD,CAAT,CALyB,CAMzB;;AACA,aAAO,MAAMI,IAAb,CAPyB,CAQzB;AACA;AACA;AACA;AACA;AAEH,KAdD;;AAeA,KAAC;AAACb,MAAAA,SAAD;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA,UAAzB;AAAqCC,MAAAA;AAArC,QAA8CO,SAAS,EAAxD;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,GAlBQ,EAkBN,CAACP,QAAD,CAlBM,CAAT,CAPqB,CA2BrB;AACA;AACA;AAEA;AACA;AACA;;AAEA,SAAS,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBR,SAAhB,CAFK,EAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBC,WAAjB,CAHK,EAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBC,UAAhB,CAJK,EAKL;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALK,EAML;AAAQ,IAAA,OAAO,EAAE,MAAMO,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANK,EAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,KAAK,IAAIA,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAG;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,IAAI,CAACC,KAA3B,SAAqCD,IAAI,CAACE,UAA1C,CAAjB,CAFb,CAPK,CAAT;AAcH,CAjDD,C,CAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAerB,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { useState, useEffect } from 'react';\r\n//import Axios from 'axios';\r\n\r\nconst Index = (props) => {\r\n    let [totalHits, currentPage, totalPages, foods] = \"\";\r\n    //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\r\n    const [inputQuery, setInputQuery] = useState(\"cheddar cheese\");\r\n    console.log(\"input Query: \", inputQuery);\r\n    const [isSearch, setSearch] = useState(false);\r\n\r\n    useEffect(() =>{\r\n        const fetchData = async () =>{\r\n            console.log(\"I am in fetchData\");\r\n            const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n            const resp = await fetch(URL);\r\n            const data = await resp.json();\r\n            setSearch(false);\r\n            //({totalHits, currentPage, totalPages, foods} = await data);\r\n            return await data;\r\n            //console.log(\"data from useEffect: \", data);\r\n            // const [totalHits, setTotalHits] = useState({totalHits});\r\n            // const [currentPage, setCurrentPage] = useState({currentPage});\r\n            // const [totalPages, setTotalPages] = useState({totalPages});\r\n            // const [foods, setFoods] = useState({foods});\r\n            \r\n        }\r\n        ({totalHits, currentPage, totalPages, foods} = fetchData());\r\n        console.log(total)\r\n    }, [isSearch]);\r\n\r\n    // useEffect(() =>{\r\n    //     setSearch(true);\r\n    // }, [setInputQuery]);\r\n\r\n    // useEffect(() => {\r\n    //     setSearch(false);\r\n    // }, []);\r\n\r\n    return ( <Layout>\r\n        <h1>Hello 21Menus</h1>\r\n        <p>Total Hits: {totalHits}</p>\r\n        <p>currentPage: {currentPage}</p>\r\n        <p>totalPages: {totalPages}</p>\r\n        <input type=\"text\" />\r\n        <button onClick={() => setSearch(true)}>Search</button>\r\n        <ul>\r\n        {\r\n            foods && foods.map(food =><li key={food.fdcId}>{food.fdcId} - {food.brandOwner}</li>)\r\n        }\r\n        </ul>\r\n\r\n        </Layout>);\r\n}\r\n\r\n// Index.getInitialProps = async () => {\r\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\r\n//     const response = await fetch(URL);\r\n//     const data = await response.json();\r\n//     return {\r\n//         data: data\r\n//     }\r\n\r\n// }\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
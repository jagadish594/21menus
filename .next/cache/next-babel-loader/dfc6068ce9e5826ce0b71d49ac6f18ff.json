{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nimport Link from '';\n\nvar Index = function Index(props) {\n  var _useState = useState(\"\"),\n      data = _useState[0],\n      setFetchData = _useState[1]; //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\n\n\n  var _useState2 = useState(\"\"),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSearch = _useState3[0],\n      setSearch = _useState3[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=\".concat(inputQuery);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 3:\n              resp = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 6:\n              jsonData = _context.sent;\n              setFetchData(jsonData);\n              setSearch(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (isSearch) {\n      fetchData();\n    }\n  }, [isSearch]);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Hello 21Menus\"), __jsx(\"input\", {\n    type: \"text\",\n    value: inputQuery,\n    onChange: function onChange(event) {\n      return setInputQuery(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setSearch(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Search\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, data.foods && data.foods.map(function (food) {\n    return __jsx(\"li\", {\n      key: food.fdcId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 49\n      }\n    }, food.fdcId, \" - \", food.brandOwner);\n  })));\n}; // Index.getInitialProps = async () => {\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\n//     const response = await fetch(URL);\n//     const data = await response.json();\n//     return {\n//         data: data\n//     }\n// }\n\n\nexport default Index;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/index.js"],"names":["Layout","fetch","useState","useEffect","Link","Index","props","data","setFetchData","inputQuery","setInputQuery","isSearch","setSearch","fetchData","searchURL","resp","json","jsonData","event","target","value","foods","map","food","fdcId","brandOwner"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,EAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,kBACQJ,QAAQ,CAAC,EAAD,CADhB;AAAA,MACdK,IADc;AAAA,MACRC,YADQ,iBAErB;;;AAFqB,mBAGeN,QAAQ,CAAC,EAAD,CAHvB;AAAA,MAGdO,UAHc;AAAA,MAGFC,aAHE;;AAAA,mBAISR,QAAQ,CAAC,KAAD,CAJjB;AAAA,MAIdS,QAJc;AAAA,MAIJC,SAJI;;AAKrBT,EAAAA,SAAS,CAAC,YAAK;AACX,QAAMU,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,SADQ,iHAC2GL,UAD3G;AAAA;AAAA,+CAEKR,KAAK,CAACa,SAAD,CAFV;;AAAA;AAERC,cAAAA,IAFQ;AAAA;AAAA,+CAGSA,IAAI,CAACC,IAAL,EAHT;;AAAA;AAGRC,cAAAA,QAHQ;AAIdT,cAAAA,YAAY,CAACS,QAAD,CAAZ;AACAL,cAAAA,SAAS,CAAC,KAAD,CAAT;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAQA,QAAGD,QAAH,EAAY;AACRE,MAAAA,SAAS;AACZ;AAEJ,GAbQ,EAaN,CAACF,QAAD,CAbM,CAAT;AAiBA,SAAS,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,EAGL;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEF,UAA1B;AAAsC,IAAA,QAAQ,EAAE,kBAACS,KAAD;AAAA,aAAWR,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxB;AAAA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHK,EAIL;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMR,SAAS,CAAC,IAAD,CAAf;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,IAAI,CAACc,KAAL,IAAcd,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,WAAG;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,IAAI,CAACC,KAA3B,SAAqCD,IAAI,CAACE,UAA1C,CAAH;AAAA,GAAnB,CAFlB,CALK,CAAT;AAYH,CAlCD,C,CAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAepB,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { useState, useEffect } from 'react';\r\nimport Link from ''\r\n\r\nconst Index = (props) => {\r\n    const [data, setFetchData] = useState(\"\");\r\n    //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\r\n    const [inputQuery, setInputQuery] = useState(\"\");\r\n    const [isSearch, setSearch] = useState(false);\r\n    useEffect(() =>{\r\n        const fetchData = async () =>{\r\n            const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n            const resp = await fetch(searchURL);\r\n            const jsonData = await resp.json();\r\n            setFetchData(jsonData);\r\n            setSearch(false);\r\n        }\r\n\r\n        if(isSearch){\r\n            fetchData();\r\n        }\r\n        \r\n    }, [isSearch]);\r\n\r\n\r\n\r\n    return ( <Layout>\r\n        <h1>Hello 21Menus</h1>\r\n\r\n        <input type=\"text\" value={inputQuery} onChange={(event) => setInputQuery(event.target.value)}/>\r\n        <button onClick={() => setSearch(true)}>Search</button>\r\n        <ul>\r\n        {\r\n            data.foods && data.foods.map(food =><li key={food.fdcId}>{food.fdcId} - {food.brandOwner}</li>)\r\n        }\r\n        </ul>\r\n\r\n        </Layout>);\r\n}\r\n\r\n// Index.getInitialProps = async () => {\r\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\r\n//     const response = await fetch(URL);\r\n//     const data = await response.json();\r\n//     return {\r\n//         data: data\r\n//     }\r\n\r\n// }\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\FoodSearch.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useEffect, useReducer } from \"react\";\nimport InputSearch from '../components/InputSearch';\nimport foodSearchReducer from '../components/FoodSearchReducer';\nimport myKeys from '../myKeys.json';\nimport Display from '../components/Display';\nvar initialState = {};\nvar previousState = {};\n\nif (true && window.document) {\n  //check client-side\n  if (localStorage.getItem(\"FoodData\")) {\n    previousState = JSON.parse(localStorage.getItem('FoodData')); //working here\n\n    console.log(\"prev state: \", previousState);\n  }\n} // if(previousState){\n//   initialState = previousState; \n// }\n// else{\n//   initialState = {\n//     data: \"\",\n//     inputQuery: \"\",\n//     isSearch: false,\n//     isLocalStorage: false\n//   }\n// }\n\n\ninitialState = {\n  data: \"\",\n  inputQuery: \"\",\n  isSearch: false,\n  isLocalStorage: false\n}; //working here. Trying to work on back button\n\nvar FoodSearch = function FoodSearch(props) {\n  var _useReducer = useReducer(foodSearchReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var currentInputQuery, searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"prev state input: \", previousState.inputQuery);\n              currentInputQuery = state.inputQuery || previousState.inputQuery;\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=\".concat(myKeys.usda, \"&query=\").concat(currentInputQuery);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 5:\n              resp = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 8:\n              jsonData = _context.sent;\n              dispatch({\n                type: \"FETCH-DATA\",\n                value: jsonData,\n                payload: true\n              });\n              dispatch({\n                type: \"IS-SEARCH\",\n                value: false\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (state.isSearch) {\n      fetchData();\n    }\n  }, [state.isSearch]);\n  useEffect(function () {\n    if (true && window.document) {\n      //check client-side\n      if (state.isLocalStorage === true) {\n        localStorage.setItem(\"FoodData\", JSON.stringify(state));\n      }\n    }\n\n    console.log(\"I am called\");\n  }, [state.isLocalStorage]);\n\n  var handleInput = function handleInput(event) {\n    dispatch({\n      type: \"INPUT-QUERY\",\n      value: event.target.value\n    });\n  };\n\n  var handleSearchButton = function handleSearchButton() {\n    dispatch({\n      type: \"SEARCH\"\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    inputQuery: state.inputQuery,\n    handleInput: handleInput,\n    handleSearchButton: handleSearchButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), __jsx(Display, {\n    data: state.data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FoodSearch;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/FoodSearch.js"],"names":["Layout","fetch","useEffect","useReducer","InputSearch","foodSearchReducer","myKeys","Display","initialState","previousState","window","document","localStorage","getItem","JSON","parse","console","log","data","inputQuery","isSearch","isLocalStorage","FoodSearch","props","state","dispatch","fetchData","currentInputQuery","searchURL","usda","resp","json","jsonData","type","value","payload","setItem","stringify","handleInput","event","target","handleSearchButton"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport InputSearch from '../components/InputSearch';\r\nimport foodSearchReducer from '../components/FoodSearchReducer';\r\nimport myKeys from '../myKeys.json';\r\nimport Display from '../components/Display';\r\n\r\nlet initialState = {};\r\nlet previousState = {};\r\n\r\nif(typeof window !== 'undefined' && window.document){ //check client-side\r\n  if(localStorage.getItem(\"FoodData\")){\r\n    previousState = JSON.parse(localStorage.getItem('FoodData')); //working here\r\n    console.log(\"prev state: \", previousState);\r\n  }\r\n}\r\n\r\n// if(previousState){\r\n//   initialState = previousState; \r\n// }\r\n// else{\r\n//   initialState = {\r\n//     data: \"\",\r\n//     inputQuery: \"\",\r\n//     isSearch: false,\r\n//     isLocalStorage: false\r\n//   }\r\n// }\r\ninitialState = {\r\n      data: \"\",\r\n      inputQuery: \"\",\r\n      isSearch: false,\r\n      isLocalStorage: false\r\n    }\r\n//working here. Trying to work on back button\r\n\r\nconst FoodSearch = (props) => {\r\n\r\n  const [state, dispatch] = useReducer(foodSearchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      console.log(\"prev state input: \", previousState.inputQuery);\r\n      const currentInputQuery = state.inputQuery || previousState.inputQuery\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${myKeys.usda}&query=${currentInputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      dispatch({\r\n        type: \"FETCH-DATA\",\r\n        value: jsonData,\r\n        payload: true\r\n      });\r\n      dispatch({\r\n        type: \"IS-SEARCH\",\r\n        value: false\r\n      });\r\n\r\n    };\r\n    \r\n    if (state.isSearch) {\r\n      fetchData();\r\n    }\r\n\r\n  }, [state.isSearch]);\r\n\r\n  useEffect(() =>{\r\n    if(typeof window !== 'undefined' && window.document){ //check client-side\r\n      if(state.isLocalStorage === true){\r\n        localStorage.setItem(\"FoodData\", JSON.stringify(state));\r\n      }\r\n    }\r\n    console.log(\"I am called\");\r\n  }, [state.isLocalStorage])\r\n\r\n  const handleInput = (event) => {\r\n    dispatch({\r\n      type: \"INPUT-QUERY\",\r\n      value: event.target.value\r\n    })\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    dispatch({\r\n      type: \"SEARCH\"\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={state.inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={state.data}/>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n"]},"metadata":{},"sourceType":"module"}
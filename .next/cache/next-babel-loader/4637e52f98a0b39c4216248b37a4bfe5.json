{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\p\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react';\nimport fetch from \"isomorphic-unfetch\";\nimport myKeys from '../../myKeys.json';\n\nvar FoodDetailsPage = function FoodDetailsPage() {\n  var brandOwner, ingredients, nutrients, unitName;\n  var router = useRouter();\n  var fdcId = router.query.id;\n\n  var _useState = useState({}),\n      foodDetails = _useState[0],\n      setFoodDetails = _useState[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var response, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.nal.usda.gov/fdc/v1/food/\".concat(fdcId, \"?api_key=\").concat(myKeys.usda)));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              jsonData = _context.sent;\n              setFoodDetails(jsonData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [fdcId]);\n  console.log(\"fooddetails: \", foodDetails);\n\n  var _foodDetails = _toArray(foodDetails);\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Back\")), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Brand: \", brandOwner), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"ingredients: \", ingredients), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Nutrients:\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, nutrients && nutrients.map(function (nutrient) {\n    return __jsx(\"li\", {\n      key: nutrient.nutrientId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, nutrient.nutrientName, \" -\", nutrient.value, \" \", nutrient.unitName);\n  })));\n};\n\nexport default FoodDetailsPage;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/p/[id].js"],"names":["useRouter","Link","useEffect","useState","fetch","myKeys","FoodDetailsPage","brandOwner","ingredients","nutrients","unitName","router","fdcId","query","id","foodDetails","setFoodDetails","fetchData","usda","response","json","jsonData","console","log","map","nutrient","nutrientId","nutrientName","value"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAIC,UAAJ,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC;AACA,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,MAAMY,KAAK,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA3B;;AAH4B,kBAIUX,QAAQ,CAAC,EAAD,CAJlB;AAAA,MAIrBY,WAJqB;AAAA,MAIRC,cAJQ;;AAM5Bd,EAAAA,SAAS,CAAC,YAAK;AACb,QAAMe,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOb,KAAK,gDAAyCQ,KAAzC,sBAA0DP,MAAM,CAACa,IAAjE,EADZ;;AAAA;AACVC,cAAAA,QADU;AAAA;AAAA,+CAEOA,QAAQ,CAACC,IAAT,EAFP;;AAAA;AAEVC,cAAAA,QAFU;AAGhBL,cAAAA,cAAc,CAACK,QAAD,CAAd;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAMAJ,IAAAA,SAAS;AACV,GARQ,EAQN,CAACL,KAAD,CARM,CAAT;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,WAA7B;;AAhB4B,8BAiBjBA,WAjBiB;;AAmB5B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADA,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYR,UAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBC,WAAlB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,SAAS,IACTA,SAAS,CAACe,GAAV,CAAc,UAACC,QAAD;AAAA,WACZ;AAAI,MAAA,GAAG,EAAEA,QAAQ,CAACC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,QAAQ,CAACE,YAAxC,QAAwDF,QAAQ,CAACG,KAAjE,OAAyEH,QAAQ,CAACf,QAAlF,CADY;AAAA,GAAd,CAFJ,CARF,CADF;AAkBD,CArCD;;AAwCA,eAAeJ,eAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport { useEffect, useState } from 'react';\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport myKeys from '../../myKeys.json';\r\n\r\nconst FoodDetailsPage = () => {\r\n  let brandOwner, ingredients, nutrients, unitName;\r\n  const router = useRouter();\r\n  const fdcId = router.query.id;\r\n  const [foodDetails, setFoodDetails] = useState({});\r\n\r\n  useEffect(() =>{\r\n    const fetchData = async () =>{\r\n      const response = await fetch(`https://api.nal.usda.gov/fdc/v1/food/${fdcId}?api_key=${myKeys.usda}`);\r\n      const jsonData = await response.json();\r\n      setFoodDetails(jsonData);\r\n    }\r\n\r\n    fetchData();\r\n  }, [fdcId])\r\n  \r\n  console.log(\"fooddetails: \", foodDetails);\r\n  const [] = foodDetails;\r\n\r\n  return (\r\n    <div>\r\n    <Link href=\"/\">\r\n      <a>Back</a>\r\n    </Link>\r\n      <h3>Brand: {brandOwner}</h3>\r\n      <h3>ingredients: {ingredients}</h3>\r\n      <h3>Nutrients:</h3>\r\n      { \r\n      <ul>\r\n        { nutrients &&\r\n          nutrients.map((nutrient) => (\r\n            <li key={nutrient.nutrientId}>{nutrient.nutrientName} -{nutrient.value} {nutrient.unitName}</li>\r\n          )) }\r\n      </ul>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n  \r\n\r\nexport default FoodDetailsPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\n\nvar FoodDetails = function FoodDetails(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  });\n};\n\nvar Index = function Index(props) {\n  var _useState = useState(\"\"),\n      data = _useState[0],\n      setFetchData = _useState[1]; //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\n\n\n  var _useState2 = useState(\"\"),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSearch = _useState3[0],\n      setSearch = _useState3[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=\".concat(inputQuery);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 3:\n              resp = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 6:\n              jsonData = _context.sent;\n              setFetchData(jsonData);\n              setSearch(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (isSearch) {\n      fetchData();\n    }\n  }, [isSearch]);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Hello 21Menus\"), __jsx(\"input\", {\n    type: \"text\",\n    value: inputQuery,\n    onChange: function onChange(event) {\n      return setInputQuery(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setSearch(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Search\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, data.foods && data.foods.map(function (food) {\n    return __jsx(\"li\", {\n      key: food.fdcId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(food.fdcId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, food.fdcId, \" - \", food.brandOwner)));\n  })));\n}; // Index.getInitialProps = async () => {\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\n//     const response = await fetch(URL);\n//     const data = await response.json();\n//     return {\n//         data: data\n//     }\n// }\n\n\nexport default Index;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/index.js"],"names":["Layout","fetch","useState","useEffect","Link","FoodDetails","props","Index","data","setFetchData","inputQuery","setInputQuery","isSearch","setSearch","fetchData","searchURL","resp","json","jsonData","event","target","value","foods","map","food","fdcId","brandOwner"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAND;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACD,KAAD,EAAW;AAAA,kBACMJ,QAAQ,CAAC,EAAD,CADd;AAAA,MAChBM,IADgB;AAAA,MACVC,YADU,iBAEvB;;;AAFuB,mBAGaP,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGhBQ,UAHgB;AAAA,MAGJC,aAHI;;AAAA,mBAIOT,QAAQ,CAAC,KAAD,CAJf;AAAA,MAIhBU,QAJgB;AAAA,MAINC,SAJM;;AAKvBV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,SADU,iHACyGL,UADzG;AAAA;AAAA,+CAEGT,KAAK,CAACc,SAAD,CAFR;;AAAA;AAEVC,cAAAA,IAFU;AAAA;AAAA,+CAGOA,IAAI,CAACC,IAAL,EAHP;;AAAA;AAGVC,cAAAA,QAHU;AAIhBT,cAAAA,YAAY,CAACS,QAAD,CAAZ;AACAL,cAAAA,SAAS,CAAC,KAAD,CAAT;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAQA,QAAID,QAAJ,EAAc;AACZE,MAAAA,SAAS;AACV;AACF,GAZQ,EAYN,CAACF,QAAD,CAZM,CAAT;AAcA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,UAFT;AAGE,IAAA,QAAQ,EAAE,kBAACS,KAAD;AAAA,aAAWR,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxB;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMR,SAAS,CAAC,IAAD,CAAf;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACc,KAAL,IACCd,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,UAACC,IAAD;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,KAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACC,KAAT,SAAmBD,IAAI,CAACE,UAAxB,CADJ,CADA,CADa;AAAA,GAAf,CAFJ,CATF,CADF;AAuBD,CA1CD,C,CA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAenB,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst FoodDetails = (props) => {\r\n    return (\r\n        <div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Index = (props) => {\r\n  const [data, setFetchData] = useState(\"\");\r\n  //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  const [isSearch, setSearch] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      setFetchData(jsonData);\r\n      setSearch(false);\r\n    };\r\n\r\n    if (isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [isSearch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Hello 21Menus</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={inputQuery}\r\n        onChange={(event) => setInputQuery(event.target.value)}\r\n      />\r\n      <button onClick={() => setSearch(true)}>Search</button>\r\n      <ul>\r\n        {data.foods &&\r\n          data.foods.map((food) => (\r\n            <li key={food.fdcId}>\r\n            <Link href=\"/p/[id]\" as={`/p/${food.fdcId}`}>\r\n                <a>{food.fdcId} - {food.brandOwner}</a>\r\n            </Link>\r\n              \r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// Index.getInitialProps = async () => {\r\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\r\n//     const response = await fetch(URL);\r\n//     const data = await response.json();\r\n//     return {\r\n//         data: data\r\n//     }\r\n\r\n// }\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
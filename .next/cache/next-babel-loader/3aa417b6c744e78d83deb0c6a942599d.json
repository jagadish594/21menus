{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\FoodSearch.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useEffect, useReducer } from \"react\";\nimport InputSearch from '../components/InputSearch';\nimport foodSearchReducer from '../components/FoodSearchReducer';\nimport myKeys from '../myKeys.json';\nimport Display from '../components/Display';\nvar previousState = {};\n\nif (true && window.document) {\n  //check client-side\n  if (localStorage.getItem(\"FoodData\")) {\n    previousState = JSON.parse(localStorage.getItem('FoodData')); //working here\n  }\n}\n\nvar initialState = {\n  data: \"\",\n  inputQuery: \"\",\n  isSearch: false\n};\n\nvar FoodSearch = function FoodSearch(props) {\n  var _useReducer = useReducer(foodSearchReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var currentInputQuery, searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currentInputQuery = previousState.inputQuery || state.inputQuery;\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=\".concat(myKeys.usda, \"&query=\").concat(currentInputQuery);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 4:\n              resp = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 7:\n              jsonData = _context.sent;\n              dispatch({\n                type: \"FETCH-DATA\",\n                value: jsonData\n              });\n              dispatch({\n                type: \"IS-SEARCH\",\n                value: false\n              });\n\n              if (jsonData) {\n                if (true && window.document) {\n                  //check client-side\n                  localStorage.setItem(\"FoodData\", JSON.stringify(state)); //initialState = JSON.parse(localStorage.getItem('FoodData'));\n                }\n\n                console.log(\"I am called\");\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (state.isSearch) {\n      fetchData();\n    }\n  }, [state.isSearch]);\n\n  var handleInput = function handleInput(event) {\n    dispatch({\n      type: \"INPUT-QUERY\",\n      value: event.target.value\n    });\n  };\n\n  var handleSearchButton = function handleSearchButton() {\n    dispatch({\n      type: \"SEARCH\"\n    });\n  }; // if(state.data){    \n  //   if(typeof window !== 'undefined' && window.document){ //check client-side\n  //     localStorage.setItem(\"FoodData\", JSON.stringify(state));\n  //   }\n  // }\n\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    inputQuery: state.inputQuery,\n    handleInput: handleInput,\n    handleSearchButton: handleSearchButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), __jsx(Display, {\n    data: state.data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FoodSearch;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/FoodSearch.js"],"names":["Layout","fetch","useEffect","useReducer","InputSearch","foodSearchReducer","myKeys","Display","previousState","window","document","localStorage","getItem","JSON","parse","initialState","data","inputQuery","isSearch","FoodSearch","props","state","dispatch","fetchData","currentInputQuery","searchURL","usda","resp","json","jsonData","type","value","setItem","stringify","console","log","handleInput","event","target","handleSearchButton"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport InputSearch from '../components/InputSearch';\r\nimport foodSearchReducer from '../components/FoodSearchReducer';\r\nimport myKeys from '../myKeys.json';\r\nimport Display from '../components/Display';\r\n\r\nlet previousState = {};\r\n\r\nif(typeof window !== 'undefined' && window.document){ //check client-side\r\n  if(localStorage.getItem(\"FoodData\")){\r\n    previousState = JSON.parse(localStorage.getItem('FoodData')); //working here\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  data: \"\",\r\n  inputQuery: \"\",\r\n  isSearch: false\r\n}\r\n\r\n\r\nconst FoodSearch = (props) => {\r\n\r\n  const [state, dispatch] = useReducer(foodSearchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      \r\n      const currentInputQuery = previousState.inputQuery || state.inputQuery\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${myKeys.usda}&query=${currentInputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      dispatch({\r\n        type: \"FETCH-DATA\",\r\n        value: jsonData\r\n      });\r\n      dispatch({\r\n        type: \"IS-SEARCH\",\r\n        value: false\r\n      });\r\n      if(jsonData){\r\n        if(typeof window !== 'undefined' && window.document){ //check client-side\r\n          localStorage.setItem(\"FoodData\", JSON.stringify(state));\r\n          //initialState = JSON.parse(localStorage.getItem('FoodData'));\r\n        }\r\n        console.log(\"I am called\");\r\n      }\r\n    };\r\n    \r\n    if (state.isSearch) {\r\n      fetchData();\r\n    }\r\n\r\n\r\n\r\n  }, [state.isSearch]);\r\n\r\n  const handleInput = (event) => {\r\n    dispatch({\r\n      type: \"INPUT-QUERY\",\r\n      value: event.target.value\r\n    })\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    dispatch({\r\n      type: \"SEARCH\"\r\n    })\r\n  };\r\n\r\n  // if(state.data){    \r\n  //   if(typeof window !== 'undefined' && window.document){ //check client-side\r\n  //     localStorage.setItem(\"FoodData\", JSON.stringify(state));\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={state.inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={state.data}/>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\n\nvar FoodDetails = function FoodDetails(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, props.foods && props.foods.ingredients), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.foods && props.foods.foodNutrients.map(function (nutrient) {\n    return __jsx(\"li\", {\n      key: nutrient.nutrientId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, nutrient.nutrientId);\n  })));\n};\n\nvar Index = function Index(props) {\n  var foods = props.data.foods; //Only  for reference\n\n  console.log(\"foods: \", foods); //only for reference\n\n  var _useState = useState(\"\"),\n      data = _useState[0],\n      setFetchData = _useState[1]; //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\n\n\n  var _useState2 = useState(\"\"),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSearch = _useState3[0],\n      setSearch = _useState3[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=\".concat(inputQuery);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 3:\n              resp = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 6:\n              jsonData = _context.sent;\n              setFetchData(jsonData);\n              setSearch(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (isSearch) {\n      fetchData();\n    }\n  }, [isSearch]);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Hello 21Menus\"), __jsx(\"input\", {\n    type: \"text\",\n    value: inputQuery,\n    onChange: function onChange(event) {\n      return setInputQuery(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setSearch(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Search\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, data.foods && data.foods.map(function (food) {\n    return __jsx(\"li\", {\n      key: food.fdcId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(food.fdcId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, food.fdcId, \" - \", food.brandOwner, __jsx(FoodDetails, {\n      ingredients: food.ingredients,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }))));\n  })));\n}; //Only for reference\n\n\nIndex.getInitialProps = function _callee() {\n  var URL, response, data;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          URL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese\";\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/index.js"],"names":["Layout","fetch","useState","useEffect","Link","FoodDetails","props","foods","ingredients","foodNutrients","map","nutrient","nutrientId","Index","data","console","log","setFetchData","inputQuery","setInputQuery","isSearch","setSearch","fetchData","searchURL","resp","json","jsonData","event","target","value","food","fdcId","brandOwner","getInitialProps","URL","response"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst FoodDetails = (props) => {\r\n  return (\r\n    <div>\r\n      <p>{props.foods && props.foods.ingredients}</p>\r\n      <ul>\r\n        {props.foods &&\r\n          props.foods.foodNutrients.map((nutrient) => (\r\n            <li key={nutrient.nutrientId}>{nutrient.nutrientId}</li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Index = (props) => {\r\n  const { foods } = props.data; //Only  for reference\r\n  console.log(\"foods: \", foods); //only for reference\r\n  const [data, setFetchData] = useState(\"\");\r\n  //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  const [isSearch, setSearch] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      setFetchData(jsonData);\r\n      setSearch(false);\r\n    };\r\n\r\n    if (isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [isSearch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Hello 21Menus</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={inputQuery}\r\n        onChange={(event) => setInputQuery(event.target.value)}\r\n      />\r\n      <button onClick={() => setSearch(true)}>Search</button>\r\n      <ul>\r\n        {data.foods &&\r\n          data.foods.map((food) => (\r\n            <li key={food.fdcId}>\r\n              <Link href=\"/p/[id]\" as={`/p/${food.fdcId}`}>\r\n                <a>\r\n                  {food.fdcId} - {food.brandOwner}\r\n                  <FoodDetails ingredients={food.ingredients} />\r\n                </a>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n//Only for reference\r\nIndex.getInitialProps = async () => {\r\n  const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\r\n  const response = await fetch(URL);\r\n  const data = await response.json();\r\n  return {\r\n    data: data,\r\n  };\r\n};\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\FoodSearch.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport FoodDetails from \"./p/[id]\";\nimport InputSearch from '../components/InputSearch';\n\nvar FoodSearch = function FoodSearch(props) {\n  //const { foods } = props.data; //Only  for reference\n  //console.log(\"foods: \", foods); //only for reference\n  var _useState = useState(\"\"),\n      data = _useState[0],\n      setFetchData = _useState[1]; //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\n\n\n  var _useState2 = useState(\"\"),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSearch = _useState3[0],\n      setSearch = _useState3[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=\".concat(inputQuery);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 3:\n              resp = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 6:\n              jsonData = _context.sent;\n              setFetchData(jsonData);\n              setSearch(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (isSearch) {\n      fetchData();\n    }\n  }, [isSearch]);\n\n  var handleInput = function handleInput() {\n    (function (event) {\n      return setInputQuery(event.target.value);\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Hello 21Menus\"), __jsx(InputSearch, {\n    inputQuery: inputQuery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}; //Only for reference\n\n\nFoodSearch.getInitialProps = function _callee() {\n  var URL, response, data;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          URL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese\";\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default FoodSearch;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/FoodSearch.js"],"names":["Layout","fetch","useState","useEffect","Link","FoodDetails","InputSearch","FoodSearch","props","data","setFetchData","inputQuery","setInputQuery","isSearch","setSearch","fetchData","searchURL","resp","json","jsonData","handleInput","event","target","value","getInitialProps","URL","response"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B;AACA;AAF4B,kBAGCN,QAAQ,CAAC,EAAD,CAHT;AAAA,MAGrBO,IAHqB;AAAA,MAGfC,YAHe,iBAI5B;;;AAJ4B,mBAKQR,QAAQ,CAAC,EAAD,CALhB;AAAA,MAKrBS,UALqB;AAAA,MAKTC,aALS;;AAAA,mBAMEV,QAAQ,CAAC,KAAD,CANV;AAAA,MAMrBW,QANqB;AAAA,MAMXC,SANW;;AAO5BX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,SADU,iHACyGL,UADzG;AAAA;AAAA,+CAEGV,KAAK,CAACe,SAAD,CAFR;;AAAA;AAEVC,cAAAA,IAFU;AAAA;AAAA,+CAGOA,IAAI,CAACC,IAAL,EAHP;;AAAA;AAGVC,cAAAA,QAHU;AAIhBT,cAAAA,YAAY,CAACS,QAAD,CAAZ;AACAL,cAAAA,SAAS,CAAC,KAAD,CAAT;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAQA,QAAID,QAAJ,EAAc;AACZE,MAAAA,SAAS;AACV;AACF,GAZQ,EAYN,CAACF,QAAD,CAZM,CAAT;;AAcA,MAAMO,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,eAACC,KAAD;AAAA,aAAWT,aAAa,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxB;AAAA;AACD,GAFD;;AAGA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEZ,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA9BD,C,CAgCA;;;AACAJ,UAAU,CAACiB,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,GADqB;AAAA;AAAA,2CAEJxB,KAAK,CAACwB,GAAD,CAFD;;AAAA;AAErBC,UAAAA,QAFqB;AAAA;AAAA,2CAGRA,QAAQ,CAACR,IAAT,EAHQ;;AAAA;AAGrBT,UAAAA,IAHqB;AAAA,4CAIpB;AACLA,YAAAA,IAAI,EAAEA;AADD,WAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AASA,eAAeF,UAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport FoodDetails from \"./p/[id]\";\r\nimport InputSearch from '../components/InputSearch';\r\n\r\nconst FoodSearch = (props) => {\r\n  //const { foods } = props.data; //Only  for reference\r\n  //console.log(\"foods: \", foods); //only for reference\r\n  const [data, setFetchData] = useState(\"\");\r\n  //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  const [isSearch, setSearch] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      setFetchData(jsonData);\r\n      setSearch(false);\r\n    };\r\n\r\n    if (isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [isSearch]);\r\n\r\n  const handleInput = () => {\r\n    (event) => setInputQuery(event.target.value)\r\n  }\r\n  return (\r\n    <Layout>\r\n      <h1>Hello 21Menus</h1>\r\n      <InputSearch inputQuery={inputQuery}/>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n//Only for reference\r\nFoodSearch.getInitialProps = async () => {\r\n  const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\r\n  const response = await fetch(URL);\r\n  const data = await response.json();\r\n  return {\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport default FoodSearch;\r\n"]},"metadata":{},"sourceType":"module"}
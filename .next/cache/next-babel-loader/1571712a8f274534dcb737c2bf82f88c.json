{"ast":null,"code":"var _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\FoodSearch.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useEffect, useReducer } from \"react\";\nimport InputSearch from '../components/InputSearch';\nimport foodSearchReducer from '../components/FoodSearchReducer';\nimport myKeys from '../myKeys.json';\nimport Display from '../components/Display';\n\nconst FoodSearch = props => {\n  const initialState = {\n    data: \"\",\n    inputQuery: \"\",\n    isSearch: false,\n    isLocalStorage: false\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(foodSearchReducer, initialState);\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${myKeys.usda}&query=${state.inputQuery}`;\n      console.log(\"searchURL: \", searchURL);\n      const resp = await fetch(searchURL);\n      const jsonData = await resp.json();\n      dispatch({\n        type: \"FETCH-DATA\",\n        value: jsonData,\n        payload: true\n      });\n      dispatch({\n        type: \"IS-SEARCH\",\n        value: false\n      });\n    };\n\n    if (state.isSearch) {\n      fetchData();\n    }\n  }, [state.isSearch]);\n  useEffect(() => {\n    if (false && window.document) {\n      //check client-side\n      if (state.isLocalStorage === true) {\n        localStorage.clear();\n        localStorage.setItem(\"FoodData\", JSON.stringify(state));\n        console.log(\"I am after localStorage setItem\");\n      } else {\n        console.log(\"I am in else. Local storage not set\");\n        console.log(\"status of isLocalStorage: \", state.isLocalStorage);\n      }\n    }\n  }, [state.isLocalStorage]);\n\n  const handleInput = event => {\n    dispatch({\n      type: \"INPUT-QUERY\",\n      value: event.target.value\n    });\n  };\n\n  const handleSearchButton = () => {\n    dispatch({\n      type: \"SEARCH\"\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    inputQuery: state.inputQuery,\n    handleInput: handleInput,\n    handleSearchButton: handleSearchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(Display, {\n    data: state.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FoodSearch;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/FoodSearch.js"],"names":["Layout","fetch","useEffect","useReducer","InputSearch","foodSearchReducer","myKeys","Display","FoodSearch","props","initialState","data","inputQuery","isSearch","isLocalStorage","state","dispatch","fetchData","searchURL","usda","console","log","resp","jsonData","json","type","value","payload","window","document","localStorage","clear","setItem","JSON","stringify","handleInput","event","target","handleSearchButton"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport InputSearch from '../components/InputSearch';\r\nimport foodSearchReducer from '../components/FoodSearchReducer';\r\nimport myKeys from '../myKeys.json';\r\nimport Display from '../components/Display';\r\n\r\nconst FoodSearch = (props) => {\r\n\r\n  const   initialState = {\r\n    data: \"\",\r\n    inputQuery: \"\",\r\n    isSearch: false,\r\n    isLocalStorage: false\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(foodSearchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${myKeys.usda}&query=${state.inputQuery}`;\r\n      console.log(\"searchURL: \", searchURL);\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      dispatch({\r\n        type: \"FETCH-DATA\",\r\n        value: jsonData,\r\n        payload: true\r\n      });\r\n      dispatch({\r\n        type: \"IS-SEARCH\",\r\n        value: false\r\n      });\r\n\r\n    };\r\n    \r\n    if (state.isSearch) {\r\n      fetchData();\r\n    }\r\n\r\n  }, [state.isSearch]);\r\n\r\n  useEffect(() =>{\r\n    if(typeof window !== 'undefined' && window.document){ //check client-side\r\n      if(state.isLocalStorage === true){\r\n        localStorage.clear();\r\n        localStorage.setItem(\"FoodData\", JSON.stringify(state));\r\n        console.log(\"I am after localStorage setItem\");\r\n      }\r\n      else{\r\n        console.log(\"I am in else. Local storage not set\");\r\n        console.log(\"status of isLocalStorage: \", state.isLocalStorage);\r\n      }\r\n    }\r\n    \r\n  }, [state.isLocalStorage])\r\n\r\n  const handleInput = (event) => {\r\n    dispatch({\r\n      type: \"INPUT-QUERY\",\r\n      value: event.target.value\r\n    })\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    dispatch({\r\n      type: \"SEARCH\"\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={state.inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={state.data}/>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n"]},"metadata":{},"sourceType":"module"}
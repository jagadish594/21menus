{"ast":null,"code":"var _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\p\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\n\nconst FoodDetailsPage = () => {\n  let brandOwner, ingredients, nutrients;\n  const router = useRouter();\n  const fdcId = router.query.id;\n\n  if (false && window.document) {\n    const FoodData = JSON.parse(localStorage.getItem('FoodData')); //console.log(\"data in detailed page\", FoodData.data.foods);\n\n    for (let [key, value] of Object.entries(FoodData.data.foods)) {\n      if (Number(fdcId) === Number(value.fdcId)) {\n        console.log(value.brandOwner);\n        console.log(value.ingredients);\n        brandOwner = value.brandOwner;\n        ingredients = value.ingredients;\n        nutrients = value.nutrients;\n        break;\n      }\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, fdcId), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Brand: \", brandOwner), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"ingredients: \", ingredients), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, nutrients && nutrients.map(nutrient => __jsx(\"li\", {\n    key: nutrient.nutrientId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, nutrient.nutrientId))));\n};\n\nexport default FoodDetailsPage;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/p/[id].js"],"names":["useRouter","FoodDetailsPage","brandOwner","ingredients","nutrients","router","fdcId","query","id","window","document","FoodData","JSON","parse","localStorage","getItem","key","value","Object","entries","data","foods","Number","console","log","map","nutrient","nutrientId"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,UAAJ,EAAgBC,WAAhB,EAA6BC,SAA7B;AACA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,KAAK,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA3B;;AACA,MAAG,SAAiCC,MAAM,CAACC,QAA3C,EAAoD;AAClD,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB,CADkD,CAElD;;AACA,SAAI,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAR,IAAwBC,MAAM,CAACC,OAAP,CAAeR,QAAQ,CAACS,IAAT,CAAcC,KAA7B,CAAxB,EAA4D;AAC1D,UAAGC,MAAM,CAAChB,KAAD,CAAN,KAAkBgB,MAAM,CAACL,KAAK,CAACX,KAAP,CAA3B,EAAyC;AACvCiB,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACf,UAAlB;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACd,WAAlB;AACAD,QAAAA,UAAU,GAAGe,KAAK,CAACf,UAAnB;AACAC,QAAAA,WAAW,GAAGc,KAAK,CAACd,WAApB;AACAC,QAAAA,SAAS,GAAGa,KAAK,CAACb,SAAlB;AACA;AACD;AACF;AACF;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYJ,UAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBC,WAAlB,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,SAAS,IACTA,SAAS,CAACqB,GAAV,CAAeC,QAAD,IACZ;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,QAAQ,CAACC,UAAxC,CADF,CAFJ,CANF,CADF;AAgBD,CAnCD;;AAsCA,eAAe1B,eAAf","sourcesContent":["import { useRouter } from 'next/router';\r\n\r\nconst FoodDetailsPage = () => {\r\n  let brandOwner, ingredients, nutrients;\r\n  const router = useRouter();\r\n  const fdcId = router.query.id;\r\n  if(typeof window !== 'undefined' && window.document){\r\n    const FoodData = JSON.parse(localStorage.getItem('FoodData'));\r\n    //console.log(\"data in detailed page\", FoodData.data.foods);\r\n    for(let [key, value] of Object.entries(FoodData.data.foods)){\r\n      if(Number(fdcId) === Number(value.fdcId)){\r\n        console.log(value.brandOwner);\r\n        console.log(value.ingredients);\r\n        brandOwner = value.brandOwner;\r\n        ingredients = value.ingredients;\r\n        nutrients = value.nutrients;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{fdcId}</h3>\r\n      <h3>Brand: {brandOwner}</h3>\r\n      <h3>ingredients: {ingredients}</h3>\r\n      \r\n      { \r\n      <ul>\r\n        { nutrients &&\r\n          nutrients.map((nutrient) => (\r\n            <li key={nutrient.nutrientId}>{nutrient.nutrientId}</li>\r\n          )) }\r\n      </ul>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n  \r\n\r\nexport default FoodDetailsPage;"]},"metadata":{},"sourceType":"module"}
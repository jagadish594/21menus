{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect, useRef } from 'react'; //import Axios from 'axios';\n\nvar Index = function Index(props) {\n  var _useState = useState(\"\"),\n      data = _useState[0],\n      setFetchData = _useState[1]; //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\n\n\n  var _useState2 = useState(\"\"),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSearch = _useState3[0],\n      setSearch = _useState3[1];\n\n  var inputRef = useRef(null);\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var URL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"I am in fetchData\");\n              URL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=\".concat(inputQuery);\n              console.log(\"URL is: \", URL);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(URL));\n\n            case 5:\n              resp = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 8:\n              jsonData = _context.sent;\n              setFetchData(jsonData);\n              setSearch(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [isSearch]);\n\n  var handleSearchClick = function handleSearchClick() {\n    console.log(\"I am in handleSearchClick\");\n    console.log(\"input value: \", inputQuery);\n    setSearch(true);\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Hello 21Menus\"), __jsx(\"input\", {\n    type: \"text\",\n    value: inputQuery,\n    ref: inputRef,\n    onChange: function onChange() {\n      return setInputQuery(inputRef.current.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: handleSearchClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Search\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, data.foods && data.foods.map(function (food) {\n    return __jsx(\"li\", {\n      key: food.fdcId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 49\n      }\n    }, food.fdcId, \" - \", food.brandOwner);\n  })));\n}; // Index.getInitialProps = async () => {\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\n//     const response = await fetch(URL);\n//     const data = await response.json();\n//     return {\n//         data: data\n//     }\n// }\n\n\nexport default Index;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/index.js"],"names":["Layout","fetch","useState","useEffect","useRef","Index","props","data","setFetchData","inputQuery","setInputQuery","isSearch","setSearch","inputRef","fetchData","console","log","URL","resp","json","jsonData","handleSearchClick","current","value","foods","map","food","fdcId","brandOwner"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C,C,CACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,kBACQJ,QAAQ,CAAC,EAAD,CADhB;AAAA,MACdK,IADc;AAAA,MACRC,YADQ,iBAErB;;;AAFqB,mBAGeN,QAAQ,CAAC,EAAD,CAHvB;AAAA,MAGdO,UAHc;AAAA,MAGFC,aAHE;;AAAA,mBAISR,QAAQ,CAAC,KAAD,CAJjB;AAAA,MAIdS,QAJc;AAAA,MAIJC,SAJI;;AAKrB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,YAAK;AACX,QAAMW,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACMC,cAAAA,GAFQ,iHAEqGR,UAFrG;AAGdM,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,GAAxB;AAHc;AAAA,+CAIKhB,KAAK,CAACgB,GAAD,CAJV;;AAAA;AAIRC,cAAAA,IAJQ;AAAA;AAAA,+CAKSA,IAAI,CAACC,IAAL,EALT;;AAAA;AAKRC,cAAAA,QALQ;AAMdZ,cAAAA,YAAY,CAACY,QAAD,CAAZ;AACAR,cAAAA,SAAS,CAAC,KAAD,CAAT;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AASAE,IAAAA,SAAS;AAEZ,GAZQ,EAYN,CAACH,QAAD,CAZM,CAAT;;AAcA,MAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BN,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,UAA7B;AACAG,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAJD;;AAKA,SAAS,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,EAGL;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEH,UAA1B;AAAsC,IAAA,GAAG,EAAII,QAA7C;AAAuD,IAAA,QAAQ,EAAE;AAAA,aAAMH,aAAa,CAACG,QAAQ,CAACS,OAAT,CAAiBC,KAAlB,CAAnB;AAAA,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHK,EAIL;AAAQ,IAAA,OAAO,EAAEF,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,IAAI,CAACiB,KAAL,IAAcjB,IAAI,CAACiB,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,WAAG;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,IAAI,CAACC,KAA3B,SAAqCD,IAAI,CAACE,UAA1C,CAAH;AAAA,GAAnB,CAFlB,CALK,CAAT;AAYH,CArCD,C,CAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAevB,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { useState, useEffect, useRef } from 'react';\r\n//import Axios from 'axios';\r\n\r\nconst Index = (props) => {\r\n    const [data, setFetchData] = useState(\"\");\r\n    //const {totalHits, currentPage, totalPages, foods} = props.data || \"\";\r\n    const [inputQuery, setInputQuery] = useState(\"\");\r\n    const [isSearch, setSearch] = useState(false);\r\n    const inputRef = useRef(null);\r\n    useEffect(() =>{\r\n        const fetchData = async () =>{\r\n            console.log(\"I am in fetchData\");\r\n            const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n            console.log(\"URL is: \", URL);\r\n            const resp = await fetch(URL);\r\n            const jsonData = await resp.json();\r\n            setFetchData(jsonData);\r\n            setSearch(false);\r\n        }\r\n        fetchData()\r\n\r\n    }, [isSearch]);\r\n\r\n    const handleSearchClick = () => {\r\n        console.log(\"I am in handleSearchClick\");\r\n        console.log(\"input value: \", inputQuery)\r\n        setSearch(true);\r\n    }\r\n    return ( <Layout>\r\n        <h1>Hello 21Menus</h1>\r\n\r\n        <input type=\"text\" value={inputQuery} ref = {inputRef} onChange={() => setInputQuery(inputRef.current.value)}/>\r\n        <button onClick={handleSearchClick}>Search</button>\r\n        <ul>\r\n        {\r\n            data.foods && data.foods.map(food =><li key={food.fdcId}>{food.fdcId} - {food.brandOwner}</li>)\r\n        }\r\n        </ul>\r\n\r\n        </Layout>);\r\n}\r\n\r\n// Index.getInitialProps = async () => {\r\n//     const URL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=Cheddar%20Cheese`;\r\n//     const response = await fetch(URL);\r\n//     const data = await response.json();\r\n//     return {\r\n//         data: data\r\n//     }\r\n\r\n// }\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
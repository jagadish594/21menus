{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\FoodSearch.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useEffect, useReducer } from \"react\";\nimport InputSearch from '../components/InputSearch';\nimport Display from '../components/Display';\nimport foodSearchReducer from '../components/FoodSearchReducer';\nimport myKeys from '../myKeys.json';\n\nvar FoodSearch = function FoodSearch() {\n  var initialState = {\n    data: \"\",\n    inputQuery: \"\",\n    isSearch: false\n  };\n\n  var _useReducer = useReducer(foodSearchReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var searchURL, resp, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchURL = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=\".concat(myKeys.usda.key, \"&query=\").concat(state.inputQuery);\n              console.log(\"url is: \", searchURL);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(searchURL));\n\n            case 4:\n              resp = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(resp.json());\n\n            case 7:\n              jsonData = _context.sent;\n              dispatch({\n                type: \"FETCH-DATA\",\n                value: jsonData\n              });\n              dispatch({\n                type: \"IS-SEARCH\",\n                value: false\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (state.isSearch) {\n      fetchData();\n    }\n  }, [state.isSearch]);\n\n  var handleInput = function handleInput(event) {\n    dispatch({\n      type: \"INPUT-QUERY\",\n      value: event.target.value\n    });\n  };\n\n  var handleSearchButton = function handleSearchButton() {\n    dispatch({\n      type: \"SEARCH\"\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    inputQuery: state.inputQuery,\n    handleInput: handleInput,\n    handleSearchButton: handleSearchButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(Display, {\n    data: state.data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FoodSearch;\n/*\r\nimport Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport InputSearch from '../components/InputSearch';\r\nimport Display from '../components/Display';\r\n\r\nconst FoodSearch = () => {\r\n  const [data, setFetchData] = useState(\"\");\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  const [isSearch, setSearch] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      setFetchData(jsonData);\r\n      setSearch(false);\r\n    };\r\n    \r\n    if (isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [isSearch]);\r\n\r\n  const handleInput = (event) => {\r\n    setInputQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    setSearch(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={data}/>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n*/","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/FoodSearch.js"],"names":["Layout","fetch","useEffect","useReducer","InputSearch","Display","foodSearchReducer","myKeys","FoodSearch","initialState","data","inputQuery","isSearch","state","dispatch","fetchData","searchURL","usda","key","console","log","resp","json","jsonData","type","value","handleInput","event","target","handleSearchButton"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,UAAU,EAAE,EAFO;AAGnBC,IAAAA,QAAQ,EAAE;AAHS,GAArB;;AADuB,oBAOGT,UAAU,CAACG,iBAAD,EAAoBG,YAApB,CAPb;AAAA,MAOhBI,KAPgB;AAAA,MAOTC,QAPS;;AASvBZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,SADU,kEAC0DT,MAAM,CAACU,IAAP,CAAYC,GADtE,oBACmFL,KAAK,CAACF,UADzF;AAEhBQ,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,SAAxB;AAFgB;AAAA,+CAGGf,KAAK,CAACe,SAAD,CAHR;;AAAA;AAGVK,cAAAA,IAHU;AAAA;AAAA,+CAIOA,IAAI,CAACC,IAAL,EAJP;;AAAA;AAIVC,cAAAA,QAJU;AAKhBT,cAAAA,QAAQ,CAAC;AACPU,gBAAAA,IAAI,EAAE,YADC;AAEPC,gBAAAA,KAAK,EAAEF;AAFA,eAAD,CAAR;AAIAT,cAAAA,QAAQ,CAAC;AACPU,gBAAAA,IAAI,EAAE,WADC;AAEPC,gBAAAA,KAAK,EAAE;AAFA,eAAD,CAAR;;AATgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAeA,QAAIZ,KAAK,CAACD,QAAV,EAAoB;AAClBG,MAAAA,SAAS;AACV;AACF,GAnBQ,EAmBN,CAACF,KAAK,CAACD,QAAP,CAnBM,CAAT;;AAqBA,MAAMc,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7Bb,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,KAAK,EAAEE,KAAK,CAACC,MAAN,CAAaH;AAFb,KAAD,CAAR;AAID,GALD;;AAOA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/Bf,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,UAAU,EAAEX,KAAK,CAACF,UADpB;AAEE,IAAA,WAAW,EAAEe,WAFf;AAGE,IAAA,kBAAkB,EAAEG,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEhB,KAAK,CAACH,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CArDD;;AAuDA,eAAeF,UAAf;AAMA","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport InputSearch from '../components/InputSearch';\r\nimport Display from '../components/Display';\r\nimport foodSearchReducer from '../components/FoodSearchReducer';\r\nimport myKeys from '../myKeys.json';\r\n\r\nconst FoodSearch = () => {\r\n  const initialState = {\r\n    data: \"\",\r\n    inputQuery: \"\",\r\n    isSearch: false\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(foodSearchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${myKeys.usda.key}&query=${state.inputQuery}`;\r\n      console.log(\"url is: \", searchURL)\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      dispatch({\r\n        type: \"FETCH-DATA\",\r\n        value: jsonData\r\n      });\r\n      dispatch({\r\n        type: \"IS-SEARCH\",\r\n        value: false\r\n      });\r\n    };\r\n    \r\n    if (state.isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [state.isSearch]);\r\n\r\n  const handleInput = (event) => {\r\n    dispatch({\r\n      type: \"INPUT-QUERY\",\r\n      value: event.target.value\r\n    })\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    dispatch({\r\n      type: \"SEARCH\"\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={state.inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={state.data}/>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport InputSearch from '../components/InputSearch';\r\nimport Display from '../components/Display';\r\n\r\nconst FoodSearch = () => {\r\n  const [data, setFetchData] = useState(\"\");\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  const [isSearch, setSearch] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      setFetchData(jsonData);\r\n      setSearch(false);\r\n    };\r\n    \r\n    if (isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [isSearch]);\r\n\r\n  const handleInput = (event) => {\r\n    setInputQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    setSearch(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={data}/>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n*/"]},"metadata":{},"sourceType":"module"}
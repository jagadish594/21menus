{"ast":null,"code":"var _jsxFileName = \"C:\\\\myReact-Redux\\\\21Menus\\\\21menus\\\\pages\\\\FoodSearch.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport InputSearch from '../';\nimport Display from '../components/Display';\n\nconst FoodSearch = () => {\n  const {\n    0: data,\n    1: setFetchData\n  } = useState(\"\");\n  const {\n    0: inputQuery,\n    1: setInputQuery\n  } = useState(\"\");\n  const {\n    0: isSearch,\n    1: setSearch\n  } = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\n      const resp = await fetch(searchURL);\n      const jsonData = await resp.json();\n      setFetchData(jsonData);\n      setSearch(false);\n    };\n\n    if (isSearch) {\n      fetchData();\n    }\n  }, [isSearch]);\n\n  const handleInput = event => {\n    setInputQuery(event.target.value);\n  };\n\n  const handleSearchButton = () => {\n    setSearch(true);\n  }; // const initialState = {\n  //   data: data\n  // }\n  // const reducer = (state, action) => {\n  //   const newState = {...state}\n  //   if(action.type === \"SEARCH\"){\n  //   }\n  //   return newState;\n  // }\n  // const [state, dispatch] = useReducer(reducer, initialState);\n\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    inputQuery: inputQuery,\n    handleInput: handleInput,\n    handleSearchButton: handleSearchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(Display, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FoodSearch;","map":{"version":3,"sources":["C:/myReact-Redux/21Menus/21menus/pages/FoodSearch.js"],"names":["Layout","fetch","useState","useEffect","useReducer","InputSearch","Display","FoodSearch","data","setFetchData","inputQuery","setInputQuery","isSearch","setSearch","fetchData","searchURL","resp","jsonData","json","handleInput","event","target","value","handleSearchButton"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,KAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAI,uGAAsGL,UAAW,EAApI;AACA,YAAMM,IAAI,GAAG,MAAMf,KAAK,CAACc,SAAD,CAAxB;AACA,YAAME,QAAQ,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAvB;AACAT,MAAAA,YAAY,CAACQ,QAAD,CAAZ;AACAJ,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAND;;AAQA,QAAID,QAAJ,EAAc;AACZE,MAAAA,SAAS;AACV;AACF,GAZQ,EAYN,CAACF,QAAD,CAZM,CAAT;;AAcA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC7BT,IAAAA,aAAa,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD,CAtBuB,CA2BvB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,WAAW,EAAES,WAFf;AAGE,IAAA,kBAAkB,EAAEI,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEf,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAnDD;;AAqDA,eAAeD,UAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState, useEffect, useReducer } from \"react\";\r\nimport InputSearch from '../'\r\nimport Display from '../components/Display';\r\n\r\nconst FoodSearch = () => {\r\n  const [data, setFetchData] = useState(\"\");\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  const [isSearch, setSearch] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const searchURL = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=GiSVQi6vc4bkITDFpqevACfryGTKgtKeRaE6FR98&query=${inputQuery}`;\r\n      const resp = await fetch(searchURL);\r\n      const jsonData = await resp.json();\r\n      setFetchData(jsonData);\r\n      setSearch(false);\r\n    };\r\n\r\n    if (isSearch) {\r\n      fetchData();\r\n    }\r\n  }, [isSearch]);\r\n\r\n  const handleInput = (event) => {\r\n    setInputQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    setSearch(true);\r\n  };\r\n\r\n\r\n  // const initialState = {\r\n  //   data: data\r\n  // }\r\n\r\n  // const reducer = (state, action) => {\r\n  //   const newState = {...state}\r\n  //   if(action.type === \"SEARCH\"){\r\n    \r\n  //   }\r\n  //   return newState;\r\n  // }\r\n  // const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <InputSearch\r\n        inputQuery={inputQuery}\r\n        handleInput={handleInput}\r\n        handleSearchButton={handleSearchButton}\r\n      />\r\n      <Display data={data}/>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FoodSearch;\r\n"]},"metadata":{},"sourceType":"module"}